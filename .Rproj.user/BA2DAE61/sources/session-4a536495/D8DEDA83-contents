library(tidyverse)
library(tigris)
library(plotly)

# Counties

county2020 <- read_csv("countypres_2000-2020.csv") %>% 
  filter(year == 2020 & party %in% c("DEMOCRAT", "REPUBLICAN") & mode == "TOTAL") %>% 
  mutate(percent = round(candidatevotes/totalvotes * 100, 1),
         county_fips = as.character(county_fips)) %>% 
  select(year:county_fips , party, percent) %>% 
  pivot_wider(names_from = party, values_from = percent) %>% 
  mutate(Differenz = REPUBLICAN-DEMOCRAT)

nyt2020 <- read_csv("nyt_counties_final12042020.csv") %>% 
  mutate(dem_percent = bidenj/total.votes * 100,
         rep_percent = trumpd/total.votes * 100,
         Differenz = rep_percent - dem_percent)

us_counties <- counties(cb = TRUE, resolution = "20m") %>%
  filter(STATE_NAME  != "Puerto Rico") %>%
  shift_geometry()

us_counties_joined <- us_counties %>% 
  left_join(nyt2020, by = c("GEOID" = "fips"))

election_2020_percdiff_county <- 
  ggplot(sf::st_cast(us_counties_joined, "MULTIPOLYGON"),
         aes(fill = Differenz)) + 
  geom_sf(color = "gray90", lwd = 0.2) + 
  scale_fill_gradient2("", low = "blue", mid = scales::muted("purple"), high = "red", breaks =  c(-25, 0, 25, 50, 75)) +
  theme_void() + 
  theme(legend.key.height = unit(3, "cm"),
        legend.key.width = unit(0.25, "cm"))

ggplotly(election_2020_percdiff_county)

# States

vote2020 <- read_csv("dataus_vote_2020.csv") %>% 
  select(state:called, dem_votes:other_votes, EV) %>% 
  filter(!is.na(EV)) %>% 
  mutate(state = case_when(str_detect(state, "Maine") ~ "Maine",
                           str_detect(state, "Nebraska") ~ "Nebraska",
                           TRUE ~ state)) %>% 
  group_by(state) %>% 
  summarise(across(dem_votes:EV, ~sum(.)),
            called = list(called)) %>% 
  mutate(all_votes = dem_votes + rep_votes + other_votes,
         dem_percent = round(dem_votes/all_votes * 100, 1),
         rep_percent = round(rep_votes/all_votes * 100, 1),
         called = case_when(state == "Nebraska" ~ "R",
                            state == "Maine" ~ "D",
                            TRUE ~ called[[1]]),
         called = factor(called, 
                         levels = c("D", "R"),
                         labels = c("Demokraten",
                                    "Republikaner"))) 

us_states <- states(cb = TRUE, resolution = "20m") %>%
  filter(NAME != "Puerto Rico") %>%
  shift_geometry()

us_states_joined <- us_states %>%
  left_join(vote2020, by = c("NAME" = "state")) 

election_2020_percdiff <- 
  ggplot(filter(us_states_joined, NAME != "District of Columbia"),
       aes(fill = rep_percent-dem_percent)) + 
  geom_sf(color = "gray90", lwd = 0.2) + 
  scale_fill_gradient2("", low = "blue", mid = scales::muted("purple"), high = "red", breaks =  c(-25, 0, 25, 50, 75)) +
  geom_sf_text(aes(label = EV), color = "white") +
  theme_void() + 
  theme(legend.key.height = unit(3, "cm"),
        legend.key.width = unit(0.25, "cm"))

ggplotly(election_2020_percdiff)
  
iwalk(.x = list("election_2020_call" = election_2020_call, 
               "election_2020_percdiff" = election_2020_percdiff),
     \(x, y) {
       
       ggsave(filename = paste0(y, ".png"),
              plot = x,
              device = png,
              width = 13,
              height = 7.4)
       
     })

# Voter

groups <- read_csv2("groups.csv") %>% 
  pivot_longer(cols = -c(group, strong),
               names_to = "party",
               values_to = "percent")

sort_values <- 
  groups %>% 
  split(~strong) %>% 
  map2(.x = .,
           .y = c("Republikanisch / tendenziell Republikanisch",
                  "Demokratisch / tendenziell Demokratisch"),
           \(x, y) {
             
             x %>% 
               filter(party == y) %>% 
               arrange(desc(percent)) %>% 
               pull(group)
             
           })

sort_values <- c(sort_values[[1]], sort_values[[2]])

groups <- groups %>% 
  mutate(group = factor(group, 
                        levels = sort_values,
                        labels = str_wrap(sort_values, 30)),
         party = factor(party, levels = c("Republikanisch / tendenziell Republikanisch",
                                          "Demokratisch / tendenziell Demokratisch")),
         strong = factor(strong, 
                         levels = c("Stärkste Wählergruppen der Demokratischen Partei",
                                    "Stärkste Wählergruppen der Republikanischen Partei"),
                         labels = c("Stärkste Wählergruppen\nder Demokraten",
                                    "Stärkste Wählergruppen\nder Republikaner")))


voters_fig <- 
  ggplot(data = groups, 
       aes(y = group,
           x = percent, 
           fill = party)) +
  geom_bar(stat = "identity", 
           position = position_dodge2()) +
  geom_text(aes(label = paste0(percent, "%"),
                x = percent + 7.5), 
            position = position_dodge2(width = 1),
            size = 5) +
  scale_fill_manual("", values = c("red", "blue"), 
                    guide = guide_legend(reverse = TRUE)) + 
  scale_x_continuous(limits = c(0, 100), labels = scales::percent_format(scale = 1, suffix = "%")) +
  theme_minimal() +
  theme(legend.position = "bottom",
        strip.text = element_text(size = 16, face = "bold"),
        axis.text = element_text(size = 15),
        legend.text = element_text(size = 15),
        panel.grid = element_blank(),
        axis.line.x.bottom = element_line(),
        axis.line.y.left = element_line()) +
  xlab(NULL) + 
  ylab(NULL) +
  facet_wrap(~strong, ncol = 2, nrow = 1, scales = "free_y") 


ggsave(filename = "voters.png",
       plot = voters_fig,
       device = png,
       width = 13,
       height = 8)

# Issues

issues <- read_csv2("issues.csv") %>% 
  pivot_longer(cols = -issues,
               names_to = "party",
               values_to = "percent") %>% 
  mutate(party = factor(party, 
                        levels = c("Republikaner",
                                   "Demokraten"))) %>% 
  filter(issues != "Außenpolitik")

sort_values <- 
  issues %>% 
  filter(party == "Demokraten") %>% 
  arrange(percent) %>% 
  pull(issues)

issues <- issues %>% 
  mutate(issues = factor(issues, 
                        levels = sort_values))

issues_fig <- 
  ggplot(data = issues, 
         aes(y = issues,
             x = percent, 
             fill = party)) +
  geom_bar(stat = "identity", 
           width = 0.6,
           position = position_dodge(width = 0.75)) +
  geom_text(aes(label = paste0(percent, "%"),
                x = percent + 1.5), 
            position = position_dodge(width = 0.75),
            size = 5) +
  scale_fill_manual("", values = c("red", "blue"), 
                    guide = guide_legend(reverse = TRUE)) + 
  scale_x_continuous(limits = c(0, 50), 
                     labels = scales::percent_format(scale = 1, suffix = "%"),
                     expand = expansion(0, 1)) +
  theme_minimal() +
  theme(legend.position = "bottom",
        strip.text = element_text(size = 18, face = "bold"),
        axis.text = element_text(size = 18),
        legend.text = element_text(size = 18),
        panel.grid = element_blank(),
        axis.line.x.bottom = element_line(),
        axis.line.y.left = element_line(),
        plot.title.position = "plot",
        plot.subtitle = element_text(face = "bold", 
                                     size = 20)) +
  xlab(NULL) + 
  ylab(NULL) + 
  labs(subtitle = "Wichtigste Wahlthemen nach Parteizugehörigkeit")


ggsave(filename = "issues.png",
       plot = issues_fig,
       device = png,
       width = 13,
       height = 8)



